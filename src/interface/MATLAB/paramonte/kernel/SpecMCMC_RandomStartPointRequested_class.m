%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%   ParaMonte: plain powerful parallel Monte Carlo library.
%
%   Copyright (C) 2012-present, The Computational Data Science Lab
%
%   This file is part of the ParaMonte library.
%
%   ParaMonte is free software: you can redistribute it and/or modify it 
%   under the terms of the GNU Lesser General Public License as published 
%   by the Free Software Foundation, version 3 of the License.
%
%   ParaMonte is distributed in the hope that it will be useful,
%   but WITHOUT ANY WARRANTY; without even the implied warranty of
%   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
%   GNU Lesser General Public License for more details.
%
%   You should have received a copy of the GNU Lesser General Public License
%   along with the ParaMonte library. If not, see, 
%
%       https://github.com/cdslaborg/paramonte/blob/master/LICENSE
%
%   ACKNOWLEDGMENT
%
%   As per the ParaMonte library license agreement terms, 
%   if you use any parts of this library for any purposes, 
%   we ask you to acknowledge the use of the ParaMonte library
%   in your work (education/research/industry/development/...)
%   by citing the ParaMonte library as described on this page:
%
%       https://github.com/cdslaborg/paramonte/blob/master/ACKNOWLEDGMENT.md
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
classdef SpecMCMC_RandomStartPointRequested_class < handle

    properties (Constant)
        CLASS_NAME  = "@SpecMCMC_RandomStartPointRequested_class"
    end

    properties
        val         = []
        def         = []
        desc        = []
    end

%***********************************************************************************************************************************
%***********************************************************************************************************************************

    methods (Access = public)

    %*******************************************************************************************************************************
    %*******************************************************************************************************************************

        function self = SpecMCMC_RandomStartPointRequested_class(methodName)
            self.def    = false;
            self.desc   = "If randomStartPointRequested=TRUE (or true or t, all case-insensitive), then the StartPoint will be initialized randomly "   ...
                        + "for each MCMC chain that is to be generated by " + methodName + ". The random values will be drawn from the specified "      ...
                        + "or the default domain of StartPoint, given by RandomStartPointDomain variable. Note that the value of StartPoint, if "       ...
                        + "provided, has precedence over random initialization. In other words, for every element of StartPoint that is not provided "  ...
                        + "as input only that element will initialized randomly if randomStartPointRequested=TRUE. "                                    ...
                        + "Also, note that even if StartPoint is randomly initialized, its random value will be deterministic between different "       ...
                        + "independent runs of " + methodName + " if the input variable randomSeed is provided by the user. "                           ...
                        + "The default value is " + self.def + "."                                                                                      ...
                        ;
        end

    %*******************************************************************************************************************************
    %*******************************************************************************************************************************

        function set(self, randomStartPointRequested)
            if isempty(randomStartPointRequested)
                self.val = self.def;
            else
                self.val = randomStartPointRequested;
            end
        end

    %*******************************************************************************************************************************
    %*******************************************************************************************************************************

    end

%***********************************************************************************************************************************
%***********************************************************************************************************************************

end